<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjs.fixedassets.mapper.JobMapper">
    <resultMap id="BaseResultMap" type="com.gjs.fixedassets.entity.Job">
        <!--@mbg.generated-->
        <!--@Table job-->
        <id column="job_id" jdbcType="INTEGER" property="jobId"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="company_id" jdbcType="INTEGER" property="companyId"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        job_id, job_name, department_id,level
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from job
        where job_id = #{jobId,jdbcType=INTEGER}
    </select>
    <select id="selectAllJobByCompanyId" resultMap="BaseResultMap">
        SELECT *
        FROM job
        WHERE company_id=#{companyId,jdbcType=INTEGER}
    </select>
    <select id="selectJName" resultType="java.lang.String">
        SELECT job_name
        FROM job
        WHERE job_id=#{jobId,jdbcType=INTEGER}
    </select>
    <insert id="insert" parameterType="Job" keyColumn="job_id" keyProperty="jobId" useGeneratedKeys="true">
        INSERT INTO `fixedassets`.`job`( `job_name`, `department_id`, `company_id`,`level`)
        VALUES ( #{jobName,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
        #{companyId,jdbcType=INTEGER},#{level,jdbcType=INTEGER});
    </insert>
    <update id="update" parameterType="Job">
        UPDATE `fixedassets`.`job` SET
        `job_name` = #{jobName,jdbcType=VARCHAR},
        `department_id` = #{departmentId,jdbcType=INTEGER},
        `company_id` = #{companyId,jdbcType=INTEGER},
        `level` = #{level,jdbcType=INTEGER}
        WHERE `job_id` = #{jobId,jdbcType=INTEGER};

    </update>
    <select id="selectJobByCompanyId" resultMap="BaseResultMap">
        select *
        from job
        left join department on job.department_id = department.department_id
        where job.company_id=#{companyId,jdbcType=INTEGER}
        <if test=" jobName != null">and job_name like CONCAT('%' ,#{jobName,jdbcType=VARCHAR},'%')</if>
        LIMIT #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </select>
    <select id="selectJobCount" resultType="com.gjs.fixedassets.entity.Job">
        select *
        from job
        where job.company_id=#{companyId,jdbcType=INTEGER}
        <if test=" jobName != null">and job_name like CONCAT('%' ,#{jobName,jdbcType=VARCHAR},'%')</if>
    </select>
    <delete id="deleteJob" parameterType="Job">
        delete from job where job_id= #{jobId,jdbcType=INTEGER};
    </delete>
    <update id="updateJob" parameterType="Job">
        UPDATE `fixedassets`.`job`
        SET `job_name` = #{jobName,jdbcType=VARCHAR},
        `department_id` = #{departmentId,jdbcType=INTEGER},
        `level` = #{level,jdbcType=INTEGER}
        WHERE
        `job_id` = #{jobId,jdbcType=INTEGER};
    </update>

</mapper>